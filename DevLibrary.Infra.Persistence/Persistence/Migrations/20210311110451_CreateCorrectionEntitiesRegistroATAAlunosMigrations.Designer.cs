// <auto-generated />
using System;
using DevLibrary.Infra.Persistence.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace DevLibrary.Infrastructure.Persistence.Migrations
{
    [DbContext(typeof(DevLibraryDbContext))]
    [Migration("20210311110451_CreateCorrectionEntitiesRegistroATAAlunosMigrations")]
    partial class CreateCorrectionEntitiesRegistroATAAlunosMigrations
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.3")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("DevLibrary.Core.Entities.Alunos", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AlunoAtivo")
                        .HasColumnType("int");

                    b.Property<DateTime>("DataCadastro")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DataNascimento")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Foto")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NomeCompleto")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Alunos");
                });

            modelBuilder.Entity("DevLibrary.Core.Entities.Categoria", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Descricao")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Categoria");
                });

            modelBuilder.Entity("DevLibrary.Core.Entities.Livro", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DataPublicacao")
                        .HasColumnType("datetime2");

                    b.Property<string>("Descricao")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("IdCategoria")
                        .HasColumnType("int");

                    b.Property<int>("LivroStatus")
                        .HasColumnType("int");

                    b.Property<string>("Nome")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("QuantidadeDeEstoque")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("IdCategoria");

                    b.ToTable("Livro");
                });

            modelBuilder.Entity("DevLibrary.Core.Entities.Locacao", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DataEntregaPrevista")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DataEntregaUsuario")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DataLocacao")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdLivro")
                        .HasColumnType("int");

                    b.Property<int>("IdRegistroATA")
                        .HasColumnType("int");

                    b.Property<int>("LocacaoStatus")
                        .HasColumnType("int");

                    b.Property<string>("Observacao")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("QuantidadeLocacaoLivro")
                        .HasColumnType("int");

                    b.Property<decimal?>("ValorMulta")
                        .HasColumnType("decimal(18,2)");

                    b.Property<float>("ValorMultaLivroAtual")
                        .HasColumnType("real");

                    b.HasKey("Id");

                    b.HasIndex("IdLivro");

                    b.HasIndex("IdRegistroATA");

                    b.ToTable("Locacao");
                });

            modelBuilder.Entity("DevLibrary.Core.Entities.RegistroATA", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DataRegistro")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DataSuspensao")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdAluno")
                        .HasColumnType("int");

                    b.Property<int>("Matricula")
                        .HasColumnType("int");

                    b.Property<int?>("QuantidadeSuspensaoRegistro")
                        .HasColumnType("int");

                    b.Property<int>("Situacao")
                        .HasColumnType("int");

                    b.Property<string>("Termo")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("IdAluno");

                    b.ToTable("RegistroATA");
                });

            modelBuilder.Entity("DevLibrary.Core.Entities.Livro", b =>
                {
                    b.HasOne("DevLibrary.Core.Entities.Categoria", "Categoria")
                        .WithMany("Livros")
                        .HasForeignKey("IdCategoria")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Categoria");
                });

            modelBuilder.Entity("DevLibrary.Core.Entities.Locacao", b =>
                {
                    b.HasOne("DevLibrary.Core.Entities.Livro", "Livro")
                        .WithMany("Locacoes")
                        .HasForeignKey("IdLivro")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("DevLibrary.Core.Entities.RegistroATA", "RegistroATA")
                        .WithMany("Locacoes")
                        .HasForeignKey("IdRegistroATA")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Livro");

                    b.Navigation("RegistroATA");
                });

            modelBuilder.Entity("DevLibrary.Core.Entities.RegistroATA", b =>
                {
                    b.HasOne("DevLibrary.Core.Entities.Alunos", "Aluno")
                        .WithMany("Matricula")
                        .HasForeignKey("IdAluno")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Aluno");
                });

            modelBuilder.Entity("DevLibrary.Core.Entities.Alunos", b =>
                {
                    b.Navigation("Matricula");
                });

            modelBuilder.Entity("DevLibrary.Core.Entities.Categoria", b =>
                {
                    b.Navigation("Livros");
                });

            modelBuilder.Entity("DevLibrary.Core.Entities.Livro", b =>
                {
                    b.Navigation("Locacoes");
                });

            modelBuilder.Entity("DevLibrary.Core.Entities.RegistroATA", b =>
                {
                    b.Navigation("Locacoes");
                });
#pragma warning restore 612, 618
        }
    }
}
